#!/bin/bash
set -xeuo pipefail

. ${KOLA_EXT_DATA}/libtest.sh

tmpdir=$(mktemp -d)
cd ${tmpdir}
echo "using tmpdir: ${tmpdir}"
touch .testtmp
trap cleanup EXIT
function cleanup () {
  if test -z "${TEST_SKIP_CLEANUP:-}"; then
    if test -f "${tmpdir}"/.testtmp; then
      cd /
      rm "${tmpdir}" -rf
    fi
  else
    echo "Skipping cleanup of ${tmpdir}"
  fi
}

# Mount the EFI partition.
tmpefimount=$(mount_tmp_efi)
bootmount=/boot
tmpefidir=${tmpefimount}/EFI
bootupdir=/usr/lib/bootupd/updates
efisubdir=fedora
shimx64=shimx64.efi
grubx64=grubx64.efi
efilib=/usr/lib/efi
tmpefisubdir=${tmpefidir}/${efisubdir}

prepare_efi_update() {
  test -w /usr
  rm -rf ${bootupdir}/EFI.json
}

# Find the files under usr/lib/efi after transferred
shim_path=$(find ${efilib} -name shim.efi)
shimx64_path=$(find ${efilib} -name ${shimx64})
grubx64_path=$(find ${efilib} -name ${grubx64})

test -n "${shimx64_path}" && test -n "${grubx64_path}"
! test -d "/usr/lib/bootupd/updates/EFI"

bootupctl status > out.txt
evr=$(rpm -q grub2-common --qf '%{EVR}')
assert_file_has_content_literal out.txt 'Component EFI'
assert_file_has_content_literal out.txt '  Installed: grub2-'"${evr}"
assert_file_has_content_literal out.txt 'Update: At latest version'
assert_file_has_content out.txt '^CoreOS aleph version:'
ok status

bootupctl validate | tee out.txt
ok validate

if env LANG=C.UTF-8 runuser -u bin bootupctl status 2>err.txt; then
  fatal "Was able to bootupctl status as non-root"
fi
assert_file_has_content err.txt 'error: This command requires root privileges'

# From here we'll fake updates
test -w /usr || rpm-ostree usroverlay

prepare_efi_update

rm -v ${shim_path}
echo bootupd-test-changes >> ${grubx64_path}
/usr/libexec/bootupd generate-update-metadata /
ver=$(jq -r .version < ${bootupdir}/EFI.json)
vers=$(jq -r .versions < ${bootupdir}/EFI.json)
test='[{"name": "test", "rpm_evr": ""}]'
new=$(echo "$vers" "$test" | jq -s add)
cat >ver.json << EOF
{ "version": "${ver},test", "versions": ${new}, "timestamp": "$(date -u --iso-8601=seconds)" }
EOF
jq -s add ${bootupdir}/EFI.json ver.json > new.json
mv new.json ${bootupdir}/EFI.json

bootupctl status | tee out.txt
assert_file_has_content_literal out.txt 'Component EFI'
assert_file_has_content_literal out.txt '  Installed: grub2-'"${evr}"
assert_not_file_has_content out.txt '  Installed: grub2-.*,test'
assert_file_has_content_literal out.txt 'Update: Available:'
ok update avail

bootupctl status --json > status.json
jq -r '.components.EFI.installed.version' < status.json > installed.txt
assert_file_has_content installed.txt '^grub2-'"${evr}"

bootupctl update | tee out.txt
assert_file_has_content out.txt 'Updated EFI: grub2-.*,test'

bootupctl status > out.txt
assert_file_has_content_literal out.txt 'Component EFI'
assert_file_has_content out.txt '  Installed: grub2-.*,test'
assert_file_has_content_literal out.txt 'Update: At latest version'
ok status after update

bootupctl validate | tee out.txt
ok validate after update

# FIXME see above
# assert_file_has_content ${tmpefidir}/${efisubdir}/somenew.efi 'somenewfile'
if test -f ${tmpefisubdir}/shim.efi; then 
  fatal "failed to remove file"
fi
if ! grep -q 'bootupd-test-changes' ${tmpefisubdir}/${grubx64}; then
  fatal "failed to update modified file"
fi
cmp ${tmpefisubdir}/${shimx64} ${shimx64_path}
ok filesystem changes

bootupctl update | tee out.txt
assert_file_has_content_literal out.txt 'No update available for any component'
assert_not_file_has_content_literal out.txt 'Updated EFI'

# Verify that we skipped update if update metadata not found
mount -o remount,rw /boot
rm -f /boot/bootupd-state.json ${bootupdir}/BIOS.json
bootupctl update | tee out.txt
assert_file_has_content out.txt 'Adopted and updated: EFI: grub2-.*'
assert_not_file_has_content out.txt 'Adopted and updated: BIOS:'

echo "some additions" >> ${tmpefisubdir}/${shimx64}
if bootupctl validate 2>err.txt; then
  fatal "unexpectedly passed validation"
fi
assert_file_has_content err.txt "Changed: .*${efisubdir}/${shimx64}"
test "$(grep -cEe '^Changed:' err.txt)" = "1"
ok validate detected changes

tap_finish
